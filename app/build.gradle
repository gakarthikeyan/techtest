plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk libs.versions.compileSDK.get().toInteger()

    defaultConfig {
        applicationId "com.example.techtest"
        minSdk libs.versions.minSDK.get().toInteger()
        targetSdk libs.versions.compileSDK.get().toInteger()
        versionCode libs.versions.versionCode.get().toInteger()
        versionName libs.versions.versionName.get().toString()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    flavorDimensions "flavor"

//    config build variants to test app in different environments (Development, Quality Control
//    , User Acceptance Testing & Pre Production)
    productFlavors {

        production {
            versionCode 1
            versionName "1.0"
            resValue "string", "app_name", "Tech Test"
            buildConfigField 'String', 'BASE_URL', '"https://www.fishwatch.gov/api/"'
        }

        QA {
            versionCode 1
            versionName "1.0"
            resValue "string", "app_name", "Tech Test"
            buildConfigField 'String', 'BASE_URL', '"https://www.fishwatch.gov/api/"'
        }

        Dev {
            versionCode 1
            versionName "1.0"
            resValue "string", "app_name", "Tech Test"
            buildConfigField 'String', 'BASE_URL', '"https://www.fishwatch.gov/api/"'
        }

    }

    dataBinding{
        enabled true
    }

    buildFeatures {
        dataBinding true
    }

    // Allow references to generated code
    kapt {
        correctErrorTypes = true
    }
}

dependencies {

    implementation project(':domain')
    implementation project(':data')
    implementation project(':common')

    implementation libs.core.ktx
    implementation libs.appcompat
    implementation libs.material
    implementation libs.constraintlayout
    testImplementation libs.junit.version
    androidTestImplementation libs.junit.ext
    androidTestImplementation libs.espresso.core

    // Navigation Support
    implementation libs.navigation.fragment
    implementation libs.navigation.ui

    //    Kotlin Coroutine
    implementation libs.coroutines.core
    implementation libs.coroutines.android

//    Dagger Hilt Dependency Injection
    implementation libs.dagger.hilt.android
    kapt libs.hilt.android.compiler

//    Retrofit2
    implementation libs.retrofit
    implementation libs.converter.gson
    implementation libs.logging.interceptor

    // ViewModel
    implementation libs.viewmodel.ktx
    // LiveData
    implementation libs.livedata.ktx
    // Saved state module for ViewModel
    implementation libs.viewmodel.savedstate

    kapt libs.common.java8

//    Glide Image library
    implementation libs.glide.version
    kapt libs.glide.compiler
}